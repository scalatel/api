openapi: 3.0.0
info:
  title: Scalatel API
  description: The Scalatel API
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/Scala5/Scalatel-API/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /contacts/{id}:
    get:
      tags:
      - contacts
      summary: Get contact by Id
      operationId: getContact
      parameters:
      - name: id
        in: path
        description: the id of contact
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 255
          type: string
      responses:
        "200":
          description: Returns the contact for requested ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        "404":
          description: Contact not found.
  /contacts:
    get:
      tags:
      - contacts
      summary: Get all contacts
      description: Get up to 50 contacts ordered by last updated/inserted from default
        list.
      operationId: getAllContacts
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
        "400":
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'
        "404":
          description: No Contacts found
    put:
      tags:
      - contacts
      summary: Upsert Contacts
      operationId: upsertContacts
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Contact'
        required: true
      responses:
        "202":
          description: Upsert operation submitted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'
        "400":
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - contacts
      summary: Delete all contacts or given contacts.
      description: Either delete_all_contacts or ids should be provided. delete_all_contacts
        deletes all contacts from default list.
      operationId: deleteContacts
      parameters:
      - name: delete_all_contacts
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: ids
        in: query
        required: false
        style: form
        explode: true
        schema:
          maxLength: 255
          type: string
      responses:
        "202":
          description: Delete operation successfully submitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'
  /contacts/import:
    put:
      tags:
      - contacts
      summary: Returns a URL to upload the csv,json contact list.
      description: This endpoint returns a URL and HTTP headers which can be used
        to PUT a file of contacts.
      parameters:
      - name: list_ids
        in: query
        description: comma seperated list ids to which all the contacts should be
          added.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: file_type
        in: query
        description: The file type of contact list, only csv and json is accepted.
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - csv
          - json
      responses:
        "200":
          description: returns the upload uri and headers to where the file has to
            be uploaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadAck'
        "400":
          description: Request Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Not all specified list_ids were not found.
  /contacts/imports/{id}:
    get:
      tags:
      - contacts
      summary: Fetch contacts import job status for jobs submitted previously.
      description: This endpoint can be used to check the status of your contact import
        job. Use the job_id from the PUT Import Contacts as the id in the path parameter.
        If there is an error with your PUT request, download the errors_url file and
        open to view more details. The job status field indicates if the job is pending,
        completed, errored or failed. Pending means not started. Completed means finished
        without any errors. Errored means finished with some errors. Failed means
        finshed with all errors or was entirely unprocessable (eg. If you attempt
        to import file format we do not support).
      operationId: importStatusCheck
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "400":
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportStatus'
  /lists/{id}/contacts:
    delete:
      tags:
      - lists
      summary: Deletes contacts from given list.
      description: Deletes the contacts identified by contact_ids from given list
        with given id.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: contact_ids
        in: query
        description: ids of contacts to be deleted.
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "404":
          description: The given contact list was not found
        "400":
          description: Request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "202":
          description: Deleted job has been accepted and a reference job_id is provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'
  /lists/{id}/contacts/count:
    get:
      tags:
      - lists
      summary: Use this method to return the number of contacts on a specific list.
      description: Use this method to return the number of contacts on a specific
        list.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "404":
          description: the contact list was not found
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
  /lists:
    get:
      tags:
      - lists
      summary: Get all contact lists of the user.
      responses:
        "200":
          description: contact list of the user.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/List'
    post:
      tags:
      - lists
      summary: creates a contact list
      parameters:
      - name: name
        in: query
        required: true
        style: form
        explode: true
        schema:
          maxLength: 100
          minLength: 5
          type: string
      responses:
        "400":
          description: Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "200":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
  /lists/{id}:
    delete:
      tags:
      - lists
      summary: deletes a given list
      description: Deletes a given list, if delete_contacts=true, the contacts in
        the list is also deleted asynchronously, else, the contacts are merged into
        default list.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: delete_contacts
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "404":
          description: the list was not found.
        "400":
          description: request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "204":
          description: delete has been processed.
        "200":
          description: list and contacts are being deleted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'
components:
  schemas:
    Contact:
      required:
      - email
      type: object
      properties:
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        city:
          type: string
        country:
          type: string
        address_line_1:
          type: string
        address_line_2:
          type: string
        postal_code:
          type: string
        state_province_region:
          type: string
        alternate_emails:
          type: array
          items:
            maxItems: 5
            minItems: 0
            type: string
        custom_fields:
          type: object
    Ack:
      required:
      - job_id
      type: object
      properties:
        job_id:
          type: integer
          format: int32
        message:
          type: string
    UploadAck:
      required:
      - job_id
      - upload_headers
      - upload_uri
      type: object
      properties:
        job_id:
          type: integer
          format: int32
        upload_urI:
          type: string
        upload_headers:
          type: array
          items:
            $ref: '#/components/schemas/Map'
    Map:
      required:
      - key
      - value
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ImportStatus:
      required:
      - job_id
      - status
      type: object
      properties:
        job_id:
          type: integer
          format: int32
        status:
          type: string
          enum:
          - pending
          - completed
          - errored
          - failed
        started_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
        errors_url:
          type: string
          description: the error url which contains all the errors while importing
            contacts from the csv/json file.
        errored_count:
          type: integer
          description: the number of errors occured while importing.
          format: int32
    List:
      required:
      - count
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        count:
          type: integer
          format: int32
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    inline_response_200:
      type: object
      properties:
        contact_count:
          type: integer
          format: int32
